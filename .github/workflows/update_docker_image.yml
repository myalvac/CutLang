name: Update docker image ubuntu

on:
  push:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}



      - uses: actions/checkout@v2
      
      - name: Update meta
        id: update_meta
        working-directory: ./scripts/conda
        run: |
          export version_cutlang=`cat ../../VERSION`
          echo "::set-output name=VERSION_CUTLANG::$version_cutlang"

          echo "::group::VERSION"
          echo "Inside group $version_cutlang"
          echo "::endgroup::"
          
          sed -i "/version = /c{% set version = '$version_cutlang' %}" meta.yaml
          meta=`cat ../../scripts/conda/meta.yaml`
          echo "::group::META"
          echo "Inside group $meta"
          echo "::endgroup::"

          export unelgRepo=$(git remote -v | grep -e 'origin.*unelg')
          echo "::set-output name=UNELG_REPO::$unelgRepo"

          export dockerImageNotExist=$(docker inspect --type=image ${{secrets.PACKAGE_USERNAME}}/cutlang:$version_cutlang | grep "No such image:")
          echo "::set-output name=DOCKER_IMAGE_NOT_EXIST::$dockerImageNotExist"
      
      - name: Docker prod
        working-directory: .
        run: |
          ./scripts/docker/util.sh prod

      -
        name: Build and push
        if: ${{ !steps.update_meta.outputs.DOCKER_IMAGE_NOT_EXIST }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: cutlang/cutlang:latest,cutlang/cutlang:${{ steps.update_meta.outputs.VERSION_CUTLANG }}